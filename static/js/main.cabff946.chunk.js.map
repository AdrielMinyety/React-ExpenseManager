{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Form.js","components/Gasto.js","components/ListaGastos.js","components/ControlPresupuesto.js","components/helper.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Pregunta","setPresupuestoInicial","setPresupuestoRestante","useState","presupuesto","setPresupuesto","error","setError","onSubmit","e","preventDefault","isNaN","type","name","placeholder","onChange","target","value","Form","setGasto","setAgregandoGasto","StateInicial","nombreGasto","cantidadGasto","id","shortid","generate","gastoData","setGastoData","handleChange","test","Gasto","gasto","eliminarGasto","onClick","ListaGastos","gastos","map","key","ControlPresupuesto","restante","presupuestoInicial","presupuestoRestante","App","agregandoGasto","setGastos","useEffect","listadoGastos","forEach","parseInt","nuevaListaGastos","filter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cabff946.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n        <div className=\"alert alert-danger font-weight-bold\">\r\n            {mensaje}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;\r\n","import React, {useState} from 'react';\r\nimport Error from './Error';\r\n\r\nconst Pregunta = ({ setPresupuestoInicial, setPresupuestoRestante }) => {\r\n\r\n    const [presupuesto, setPresupuesto] = useState(null);\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        setPresupuesto(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(presupuesto <= 1 || isNaN( presupuesto ) ) {\r\n            setError(true);\r\n            return;\r\n        }\r\n        setError(false);\r\n        setPresupuestoInicial(presupuesto);\r\n        setPresupuestoRestante(presupuesto);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {(error) \r\n            ? <Error mensaje=\"Presupuesto no válido\"/>\r\n            : null\r\n            }\r\n            <div className=\"input-group input-group-lg\">\r\n                <input \r\n                    type=\"number\"\r\n                    name=\"presupuesto\"\r\n                    className=\"form-control text-center font-weight-bold mb-2\"\r\n                    placeholder=\"Presupuesto (ej: 450)\"\r\n                    onChange={handleChange}\r\n                    />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success btn-block\">Empezar!</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Pregunta;\r\n","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\n\r\nconst Form = ({ setGasto, setAgregandoGasto }) => {\r\n\r\n    const StateInicial = {\r\n        nombreGasto : \"\",\r\n        cantidadGasto : \"\",\r\n        id: shortid.generate()\r\n    }\r\n\r\n    const [error, setError] = useState(false);\r\n    const [gastoData, setGastoData] = useState(StateInicial);\r\n    // actualizar state\r\n    // update state\r\n    const handleChange = e => {\r\n        setGastoData({\r\n            ...gastoData,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        // validar campos\r\n        // validate fields\r\n        if(gastoData.cantidadGasto <= 1 || isNaN( gastoData.cantidadGasto ) || /^\\s+$/.test( gastoData.nombreGasto) || gastoData.nombreGasto === '' ) {\r\n            setError(true);\r\n            return;\r\n        }\r\n        // enviar a App\r\n        // send to App\r\n        setGasto(gastoData);\r\n        setAgregandoGasto(true);\r\n        // resetear Form\r\n        // reset Form\r\n        setGastoData(StateInicial);\r\n        setError(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {(error) \r\n            ? <Error mensaje=\"Datos no válidos\"/>\r\n            : null\r\n            }\r\n            <div className=\"input-group input-group-lg\">\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"nombreGasto\"\r\n                    className=\"form-control text-center font-weight-bold mb-2\"\r\n                    placeholder=\"Nombre del gasto\"\r\n                    onChange={handleChange}\r\n                    value={gastoData.nombreGasto}\r\n                    />\r\n            </div>\r\n            <div className=\"input-group input-group-lg\">\r\n                <input \r\n                    type=\"number\"\r\n                    name=\"cantidadGasto\"\r\n                    className=\"form-control text-center font-weight-bold mb-2\"\r\n                    placeholder=\"Cantidad (ej: 450)\"\r\n                    onChange={handleChange}\r\n                    value={gastoData.cantidadGasto}\r\n                    />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success btn-block\">Empezar!</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react';\r\n\r\nconst Gasto = ({gasto, eliminarGasto}) => {\r\n    // tomar el id a borrar\r\n    // take the id to delete\r\n    const handleClick = e => {\r\n        eliminarGasto(e.target.id);\r\n    }\r\n    return (\r\n        <div className=\"card bg-light m-2\">\r\n            <p className=\"m-0 p-2 font-weight-bold\">\r\n                <span onClick={handleClick} className=\"btn badge badge-danger p-2 mr-1\" id={gasto.id}>&times;</span>\r\n                {gasto.nombreGasto} <span className=\"badge badge-dark p-2 float-right\">- {gasto.cantidadGasto}</span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gasto;\r\n","import React from 'react';\r\nimport Gasto from './Gasto';\r\n\r\nconst ListaGastos = ({gastos, eliminarGasto}) =>(\r\n    <div className=\"card p-2\">            \r\n        <h2 className=\"text-center text-muted\">Gastos</h2>\r\n        {gastos.map(gasto => (\r\n            <Gasto\r\n                key={gasto.id}\r\n                gasto={gasto}\r\n                eliminarGasto={eliminarGasto}\r\n            />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default ListaGastos\r\n","import React, {Fragment} from 'react';\r\nimport { revisarPresupuesto } from './helper';\r\n\r\nconst ControlPresupuesto = ({ presupuestoInicial, presupuestoRestante }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"dropdown-divider my-3\"></div>\r\n            <div className=\"font-weight-bold text-right\">\r\n                <div className={revisarPresupuesto(presupuestoInicial, presupuestoRestante)}>\r\n                    Restante: {presupuestoRestante}\r\n                </div>\r\n                <div className=\"alert alert-primary\">\r\n                    Presupuesto: {presupuestoInicial}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ControlPresupuesto\r\n","export const revisarPresupuesto = (presupuesto,restante) => {\r\n    let clase;\r\n    // Comprobar el 25% \r\n    if( (presupuesto / 4) > restante) {\r\n         clase = 'alert alert-danger';\r\n    } else if( (presupuesto / 2) > restante) {\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert alert-success';\r\n    }\r\n    return clase;\r\n}","import React, { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Form from './components/Form';\nimport ListaGastos from './components/ListaGastos';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  const [ presupuestoInicial, setPresupuestoInicial ] = useState(0);\n  const [presupuestoRestante, setPresupuestoRestante] = useState(0);\n  const [agregandoGasto, setAgregandoGasto] = useState(false);\n  const [ gasto, setGasto ] = useState({});\n  const [gastos, setGastos] = useState([]);\n\n  // Detectar cambios en el state\n  // Detect changes in the state\n  useEffect(() => {\n    if(agregandoGasto){\n      let listadoGastos = [...gastos, gasto];\n      setGastos(listadoGastos);\n      const restante = presupuestoRestante - gasto.cantidadGasto;\n      setPresupuestoRestante(restante);\n      setAgregandoGasto(false);\n    }\n  }, [agregandoGasto, gastos, gasto, presupuestoRestante])\n\n  const eliminarGasto = id => {\n    // eliminar de gastos ([]) y actualizar el \"restante\"\n    // delete from gastos ([]) and update the \"restante\"\n    let restante;\n    gastos.forEach( gasto => {\n      if (gasto.id === id) restante = presupuestoRestante + parseInt( gasto.cantidadGasto, 10 );\n      setPresupuestoRestante(restante);\n    })\n    const nuevaListaGastos = gastos.filter(gasto => gasto.id !== id);\n    setGastos(nuevaListaGastos);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"card shadow mb-5\">\n          <h1 className=\"card-header text-center text-success\">Gestor de Gastos</h1>\n          <div className=\"card-body\">\n            {(!presupuestoInicial)\n            ? <Pregunta \n                setPresupuestoInicial={setPresupuestoInicial}\n                setPresupuestoRestante={setPresupuestoRestante}\n                />\n            : (\n              <div className=\"row\">\n                <div className=\"col-md-6 mt-3\">\n                  <Form\n                    setGasto={setGasto}\n                    setAgregandoGasto={setAgregandoGasto}\n                  />\n                </div>\n                <div className=\"col-md-6 mt-3\">\n                  <ListaGastos \n                    gastos={gastos}\n                    eliminarGasto={eliminarGasto}\n                  />\n                  <ControlPresupuesto \n                    presupuestoInicial={presupuestoInicial}\n                    presupuestoRestante={presupuestoRestante}\n                  />\n                </div>\n              </div>\n            )\n            }            \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}